<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <configSections>
      <section name="MsmqTransportConfig" type="NServiceBus.Config.MsmqTransportConfig, NServiceBus.Core" />
      <section name="UnicastBusConfig" type="NServiceBus.Config.UnicastBusConfig, NServiceBus.Core" />
      <!-- If you want to use a database for subscription persistence, uncomment the following section and specify below the connection settings -->
      <!--<section name="DBSubscriptionStorageConfig" type="NServiceBus.Config.DBSubscriptionStorageConfig, NServiceBus.Core" />-->
      <!-- If you want to use a database for saga persistence, uncomment the following line and specify below the connection settings -->
      <!--<section name="NHibernateSagaPersisterConfig" type="NServiceBus.Config.NHibernateSagaPersisterConfig, NServiceBus.Core" />-->
    </configSections>


    <!-- 1. Input queue must be on the same machine as the process feeding off of it.
       2. Make sure that the error queue for all the NSB endpoints is set to this input queue, so that errors will be monitored.
       3. Set the ForwardReceivedMessagesTo to a queue name, where the message received in the error queue will be stored. Use
          the tool to reprocess the error in this queue, when the message needs to be reprocessed by the original endpoint.
       4. If you have your own endpoint that needs to process the error, change the endpoint in the message mapping. 
  -->

    <MsmqTransportConfig
      InputQueue="GenerateError"
      ErrorQueue="NServiceBus.Errors"
      NumberOfWorkerThreads="1"
      MaxRetries="1"
  />

    <UnicastBusConfig
      DistributorControlAddress=""
      DistributorDataAddress=""
      ForwardReceivedMessagesTo="">
      <MessageEndpointMappings>
      </MessageEndpointMappings>
    </UnicastBusConfig>
  </configuration>