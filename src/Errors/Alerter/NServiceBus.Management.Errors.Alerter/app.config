<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="MsmqTransportConfig" type="NServiceBus.Config.MsmqTransportConfig, NServiceBus.Core" />
    <section name="UnicastBusConfig" type="NServiceBus.Config.UnicastBusConfig, NServiceBus.Core" />
    <section name="MessageForwardingInCaseOfFaultConfig" type="NServiceBus.Config.MessageForwardingInCaseOfFaultConfig, NServiceBus.Core" />
    <section name="AlertRulesConfig" type="NServiceBus.Management.Errors.Alerter.Config.AlertRulesSection, NServiceBus.Management.Errors.Alerter.Config"/> 
  </configSections>
  
  <MsmqTransportConfig NumberOfWorkerThreads="1" MaxRetries="5" />
  
  <UnicastBusConfig DistributorControlAddress="" DistributorDataAddress="" ForwardReceivedMessagesTo="">
    <MessageEndpointMappings>
      <add Messages="NServiceBus.Management.Errors.Messages" Endpoint="NServiceBus.Management.Errors.Monitor" />
    </MessageEndpointMappings>
  </UnicastBusConfig>
  
  <MessageForwardingInCaseOfFaultConfig ErrorQueue="NServiceBus.Management.Errors" />
  
  <appSettings>
    <!-- Saga Id, If this endpoint is restarted, we want the processing of the messages to belong to the same saga-->
    <add key="AlerterInstanceId" value="65E6B1AB-47C1-4362-9C0C-40E400FDD6D0" />
  </appSettings>

  <connectionStrings>
    <add name="RavenDbConnectionString" connectionString="Url = http://localhost:8080; DefaultDatabase=NServiceBus.Management.Errors.Persistence" />
  </connectionStrings>


  <!-- Currently the Alerter handles the following RuleTypes as defined in the Tag.  
  CriticalLimit, SummaryAlert, ErrorMessageType, TimeInErrorQExceeded. So for example, it 
  is possible to set two different thresholds for CriticalLimit for two groups of people to get alerted.
  Ops2 will get notified when threshold exceeds say 50, while Ops1 will get notified on a lower threshold.
  RuleNames needs to be distinct. 
  -->  
  <AlertRulesConfig>
    <AlertRules MaxTimesToAlert="5">
      
      <!--When errors exceed the critical limit, alert immediately -->
      <AlertRule Name="Tier1 -- MaxThreshold" Tag="CriticalLimit" Value="2">
        <AlertProviders>
          <Provider Type="Smtp" RecipientList="youremail@yourdomain.com" />
          <Provider Type="Console"  RecipientList="Console"/>
        </AlertProviders>
      </AlertRule>

      <AlertRule Name="Tier2 -- MaxThreshold" Tag="CriticalLimit" Value="5">
        <AlertProviders>
          <Provider Type="Smtp" RecipientList="youremail@yourdomain.com" />
          <Provider Type="Console"  RecipientList="Console"/>
        </AlertProviders>
      </AlertRule>
      
      <!--When errors are present in the queue, provide an alert every configured amount of time has passed -->
      <!--Provide value in minutes-->
      <AlertRule Name="Summary" Tag="SummaryAlert" Value="30" >
        <AlertProviders>
          <Provider Type="Smtp" RecipientList="youremail@yourdomain.com" />
          <Provider Type="Console" RecipientList="Console" />
        </AlertProviders>
      </AlertRule>
      
      <!-- FUTURE FEATURE CONSIDERATIONS -->
      <!--When a message of the configured type arrives in the error queue, alert immediately -->
          <!--
      <AlertRule Name="Team1-Alert" Tag="ErrorMessageType" Value="*Team1Specific*" >
        <AlertProviders>
          <Provider Type="Smtp" RecipientList="youremail@yourdomain.com" />
        </AlertProviders>
      </AlertRule>

      <AlertRule Name="Team2-Alert" Tag="ErrorMessageType" Value="*Team2Specific*" >
        <AlertProviders>
          <Provider Type="Smtp" RecipientList="youremail@yourdomain.com" />
        </AlertProviders>
      </AlertRule>
      
      <!--When a message in the error has aged the configured amount of time, alert immediately -->
      <!--<AlertRule Name="Tier1 Alert" Tag="TimeInErrorQExceeded" Value="30" >
        <AlertProviders>
          <Provider Type="Smtp" RecipientList="youremail@yourdomain.com" />
          <Provider Type="Console" RecipientList="Console" />
        </AlertProviders>
      </AlertRule>

      <AlertRule Name="Tier2 Alert" Tag="TimeInErrorQExceeded" Value="90" >
        <AlertProviders>
          <Provider Type="Smtp" RecipientList="youremail@yourdomain.com" />
          <Provider Type="Console" RecipientList="Console" />
        </AlertProviders>
      </AlertRule>-->
      
    </AlertRules>
  </AlertRulesConfig>
  
  <!-- settings needed for smtp notification-->
  <system.net>
    <mailSettings>
      <smtp from="youremail@yourdomain.com">
        <network host="SmtpServer" port="25" />
      </smtp>
    </mailSettings>
  </system.net>
</configuration>